/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AdvancedForm {
    }
    interface ButtonComponent {
        "color": string;
        "text": string;
    }
    interface CustomInput {
        "condition": (value: string) => boolean;
        "errorMessage": string;
        "label": string;
    }
    interface MyComponent {
        "first": string;
        "last": string;
        "middle": string;
    }
    interface StCard {
    }
    interface StCardContent {
    }
    interface StCardHeader {
    }
    interface TsCardBottom {
    }
}
export interface ButtonComponentCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLButtonComponentElement;
}
export interface CustomInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLCustomInputElement;
}
declare global {
    interface HTMLAdvancedFormElement extends Components.AdvancedForm, HTMLStencilElement {
    }
    var HTMLAdvancedFormElement: {
        prototype: HTMLAdvancedFormElement;
        new (): HTMLAdvancedFormElement;
    };
    interface HTMLButtonComponentElement extends Components.ButtonComponent, HTMLStencilElement {
    }
    var HTMLButtonComponentElement: {
        prototype: HTMLButtonComponentElement;
        new (): HTMLButtonComponentElement;
    };
    interface HTMLCustomInputElement extends Components.CustomInput, HTMLStencilElement {
    }
    var HTMLCustomInputElement: {
        prototype: HTMLCustomInputElement;
        new (): HTMLCustomInputElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLStCardElement extends Components.StCard, HTMLStencilElement {
    }
    var HTMLStCardElement: {
        prototype: HTMLStCardElement;
        new (): HTMLStCardElement;
    };
    interface HTMLStCardContentElement extends Components.StCardContent, HTMLStencilElement {
    }
    var HTMLStCardContentElement: {
        prototype: HTMLStCardContentElement;
        new (): HTMLStCardContentElement;
    };
    interface HTMLStCardHeaderElement extends Components.StCardHeader, HTMLStencilElement {
    }
    var HTMLStCardHeaderElement: {
        prototype: HTMLStCardHeaderElement;
        new (): HTMLStCardHeaderElement;
    };
    interface HTMLTsCardBottomElement extends Components.TsCardBottom, HTMLStencilElement {
    }
    var HTMLTsCardBottomElement: {
        prototype: HTMLTsCardBottomElement;
        new (): HTMLTsCardBottomElement;
    };
    interface HTMLElementTagNameMap {
        "advanced-form": HTMLAdvancedFormElement;
        "button-component": HTMLButtonComponentElement;
        "custom-input": HTMLCustomInputElement;
        "my-component": HTMLMyComponentElement;
        "st-card": HTMLStCardElement;
        "st-card-content": HTMLStCardContentElement;
        "st-card-header": HTMLStCardHeaderElement;
        "ts-card-bottom": HTMLTsCardBottomElement;
    }
}
declare namespace LocalJSX {
    interface AdvancedForm {
    }
    interface ButtonComponent {
        "color"?: string;
        "onButtonClicked"?: (event: ButtonComponentCustomEvent<boolean>) => void;
        "text"?: string;
    }
    interface CustomInput {
        "condition"?: (value: string) => boolean;
        "errorMessage"?: string;
        "label"?: string;
        "onInputChange"?: (event: CustomInputCustomEvent<string>) => void;
    }
    interface MyComponent {
        "first"?: string;
        "last"?: string;
        "middle"?: string;
    }
    interface StCard {
    }
    interface StCardContent {
    }
    interface StCardHeader {
    }
    interface TsCardBottom {
    }
    interface IntrinsicElements {
        "advanced-form": AdvancedForm;
        "button-component": ButtonComponent;
        "custom-input": CustomInput;
        "my-component": MyComponent;
        "st-card": StCard;
        "st-card-content": StCardContent;
        "st-card-header": StCardHeader;
        "ts-card-bottom": TsCardBottom;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "advanced-form": LocalJSX.AdvancedForm & JSXBase.HTMLAttributes<HTMLAdvancedFormElement>;
            "button-component": LocalJSX.ButtonComponent & JSXBase.HTMLAttributes<HTMLButtonComponentElement>;
            "custom-input": LocalJSX.CustomInput & JSXBase.HTMLAttributes<HTMLCustomInputElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "st-card": LocalJSX.StCard & JSXBase.HTMLAttributes<HTMLStCardElement>;
            "st-card-content": LocalJSX.StCardContent & JSXBase.HTMLAttributes<HTMLStCardContentElement>;
            "st-card-header": LocalJSX.StCardHeader & JSXBase.HTMLAttributes<HTMLStCardHeaderElement>;
            "ts-card-bottom": LocalJSX.TsCardBottom & JSXBase.HTMLAttributes<HTMLTsCardBottomElement>;
        }
    }
}
